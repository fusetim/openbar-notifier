/*
 * OpenAPI - Bar
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.11
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Account {
    #[serde(rename = "id")]
    pub id: uuid::Uuid,
    #[serde(rename = "first_name")]
    pub first_name: String,
    #[serde(rename = "last_name")]
    pub last_name: String,
    #[serde(rename = "nickname", skip_serializing_if = "Option::is_none")]
    pub nickname: Option<String>,
    #[serde(rename = "google_id", skip_serializing_if = "Option::is_none")]
    pub google_id: Option<String>,
    #[serde(rename = "google_picture", skip_serializing_if = "Option::is_none")]
    pub google_picture: Option<String>,
    #[serde(rename = "email_address")]
    pub email_address: String,
    #[serde(rename = "balance")]
    pub balance: i64,
    #[serde(rename = "points")]
    pub points: i64,
    #[serde(rename = "card_id", skip_serializing_if = "Option::is_none")]
    pub card_id: Option<String>,
    #[serde(rename = "card_pin")]
    pub card_pin: String,
    #[serde(rename = "password", skip_serializing_if = "Option::is_none")]
    pub password: Option<String>,
    #[serde(rename = "role")]
    pub role: models::AccountRole,
    #[serde(rename = "price_role")]
    pub price_role: models::AccountPriceRole,
    #[serde(rename = "restrictions")]
    pub restrictions: Vec<models::AccountRestrictions>,
    #[serde(rename = "state")]
    pub state: models::AccountState,
    #[serde(rename = "deleted_at", skip_serializing_if = "Option::is_none")]
    pub deleted_at: Option<i32>,
    #[serde(rename = "deleted_by", skip_serializing_if = "Option::is_none")]
    pub deleted_by: Option<uuid::Uuid>,
    #[serde(rename = "wants_to_staff")]
    pub wants_to_staff: bool,
}

impl Account {
    pub fn new(id: uuid::Uuid, first_name: String, last_name: String, email_address: String, balance: i64, points: i64, card_pin: String, role: models::AccountRole, price_role: models::AccountPriceRole, restrictions: Vec<models::AccountRestrictions>, state: models::AccountState, wants_to_staff: bool) -> Account {
        Account {
            id,
            first_name,
            last_name,
            nickname: None,
            google_id: None,
            google_picture: None,
            email_address,
            balance,
            points,
            card_id: None,
            card_pin,
            password: None,
            role,
            price_role,
            restrictions,
            state,
            deleted_at: None,
            deleted_by: None,
            wants_to_staff,
        }
    }
}

