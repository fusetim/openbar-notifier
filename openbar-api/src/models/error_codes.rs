/*
 * OpenAPI - Bar
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.11
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ErrorCodes {
    #[serde(rename = "bad_request")]
    ErrBadRequest,
    #[serde(rename = "forbidden")]
    ErrForbidden,
    #[serde(rename = "account_not_found")]
    ErrAccountNotFound,
    #[serde(rename = "qr_invalid")]
    ErrQRInvalid,
    #[serde(rename = "internal_server_error")]
    ErrInternalServerError,
    #[serde(rename = "not_authenticated")]
    ErrNotAuthenticated,
    #[serde(rename = "image_not_found")]
    ErrImageNotFound,
    #[serde(rename = "text_not_found")]
    ErrTextNotFound,
    #[serde(rename = "category_not_found")]
    ErrCategoryNotFound,
    #[serde(rename = "item_not_found")]
    ErrItemNotFound,
    #[serde(rename = "refill_not_found")]
    ErrRefillNotFound,
    #[serde(rename = "starring_not_found")]
    ErrStarringNotFound,
    #[serde(rename = "transaction_not_found")]
    ErrTransactionNotFound,

}

impl std::fmt::Display for ErrorCodes {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::ErrBadRequest => write!(f, "bad_request"),
            Self::ErrForbidden => write!(f, "forbidden"),
            Self::ErrAccountNotFound => write!(f, "account_not_found"),
            Self::ErrQRInvalid => write!(f, "qr_invalid"),
            Self::ErrInternalServerError => write!(f, "internal_server_error"),
            Self::ErrNotAuthenticated => write!(f, "not_authenticated"),
            Self::ErrImageNotFound => write!(f, "image_not_found"),
            Self::ErrTextNotFound => write!(f, "text_not_found"),
            Self::ErrCategoryNotFound => write!(f, "category_not_found"),
            Self::ErrItemNotFound => write!(f, "item_not_found"),
            Self::ErrRefillNotFound => write!(f, "refill_not_found"),
            Self::ErrStarringNotFound => write!(f, "starring_not_found"),
            Self::ErrTransactionNotFound => write!(f, "transaction_not_found"),
        }
    }
}

impl Default for ErrorCodes {
    fn default() -> ErrorCodes {
        Self::ErrBadRequest
    }
}

